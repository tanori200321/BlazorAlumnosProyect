@page "/alumno"
@page "/alumno/{id:int}"

@using BlazorAlumnos.Shared.DTOs.Alumnos;

@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Alumno</h3>

<EditForm Model="alumno" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="col-lg-12">
        <div class="mb-3">
            <label class="form-label">Matrícula</label>
            <InputText id="Matricula" class="form-control" @bind-Value="@alumno.Matricula" />
            <ValidationMessage For="@(() => alumno.Matricula)" />
        </div>
    </div>

     <div class="col-lg-12">
        <div class="mb-3">
           <label class="form-label">Nombre</label>
            <InputText id="Nombre" class="form-control" @bind-Value="@alumno.Nombre" />
            <ValidationMessage For="@(() => alumno.Nombre)" />
        </div>
    </div>

    <div class="col-lg-12">
        <div class="mb-3">
            <label class="form-label">Matrícula</label>
            <InputText id="Matricula" class="form-control" @bind-Value="@alumno.Matricula" />
            <ValidationMessage For="@(() => alumno.Matricula)" />
        </div>
    </div>

    <div class="col-1g-12 text-end mb-3 pt-4">
        <hr />
        <button type="button" class="btn btn-danger" onclick="history.back()">Cancelar</button>
        <button type="submit" class="btn btn-success">Guardar</button>
    </div>

</EditForm>


@code {
    protected AlumnoDTO alumno = new AlumnoDTO();
    [Parameter] public int id { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
        {
            var response = await httpClient.GetFromJsonAsync<AlumnoDTO>($"api/alumnoz/{id}");
            if (response != null)
            {
                alumno = response;
            }
        }
    }

    private async Task OnValidSubmit()
    {
        if (id > 0)
        {
            await httpClient.PutAsJsonAsync<AlumnoDTO>("api/alumnoz", alumno);
        }
        else
        {
            await httpClient.PostAsJsonAsync<AlumnoDTO>("api/alumnoz", alumno);
        }

        navigationManager.NavigateTo("alumnos");
    }
}
